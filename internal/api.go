package Api

import (
	"encoding/json"
	"fmt"
	"io"
	"log"
	"net/http"
)

type AutoGenerated struct {
	Count    int         `json:"count"`
	Next     string      `json:"next"`
	Previous interface{} `json:"previous"`
	Results  []Results   `json:"results"`
}
type Results struct {
	Name string `json:"name"`
	URL  string `json:"url"`
}

func CallPokeLocationArea(offset string) []string {
	var locations []string
	type response struct {
		Count    int    `json:"count"`
		Next     string `json:"next"`
		Previous any    `json:"previous"`
		Results  []struct {
			Name string `json:"name"`
			URL  string `json:"url"`
		} `json:"results"`
	}

	res, err := http.Get("https://pokeapi.co/api/v2/location-area/?offset=" + offset + "&limit=20")
	if err != nil {
		log.Fatal(err)
	}
	body, err := io.ReadAll(res.Body)
	res.Body.Close()
	if res.StatusCode > 299 {
		log.Fatalf("Response failed with status code: %d and\nbody: %s\n", res.StatusCode, body)
	}
	if err != nil {
		log.Fatal(err)
	}
	apiResponse := &response{}
	err = json.Unmarshal(body, apiResponse)
	if err != nil {
		fmt.Println(err)
	}
	for _, location := range apiResponse.Results {
		locations = append(locations, location.Name)
	}
	return locations
}
